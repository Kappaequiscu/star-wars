{"version":3,"sources":["Components/Header.jsx","Components/Pagination.jsx","Pages/Character.jsx","Pages/ListCharacters.jsx","Components/Navbar.jsx","App.js","index.js"],"names":["Container","styled","div","Header","Pagination","charactersPerPage","totalCharacters","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","Character","props","useState","film","setFilm","loading","setLoading","useEffect","promise","films","url","axios","get","filmsArr","Promise","all","then","data","el","catch","err","console","log","message","Col","xxl","xl","lg","md","sm","xs","Card","Body","Title","name","Subtitle","gender","height","mass","skin","hair","eyes","birthday","Object","values","elements","title","opening_crawl","ListCharacters","characters","setCharacters","page","setPage","count","setCount","isLoading","setIsLoading","fetch","res","json","results","fluid","Row","pageNumber","Spinner","animation","variant","character","index","birth_year","eye_color","hair_color","homeworld","skin_color","species","starships","vehicles","Wrapper","Center","Logo","h1","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66503a9.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport React from 'react'\r\n\r\nconst Container = styled.div`\r\n    height: 30px;\r\n    background-color: teal;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n            Front-end Code Assessment \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Pagination = ({ charactersPerPage, totalCharacters, paginate }) => {\r\n\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalCharacters / charactersPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n    \r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {\r\n                    pageNumbers.map(number => (\r\n                        <li key={number} className='page-item'>\r\n                            <a onClick={() => paginate(number)} className='page-link'>\r\n                                {number}\r\n                            </a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card, Col, Spinner} from 'react-bootstrap'\r\n\r\nconst Character = ( props ) => {\r\n\r\n    const [film, setFilm] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const films = props.films\r\n\r\n        const fetchURL = (url) => axios.get(url)\r\n\r\n        const promise = films.map(fetchURL)\r\n        const filmsArr = []\r\n\r\n        Promise.all(promise)\r\n            .then((data) => {\r\n                setLoading(true)\r\n                data.map(el => (\r\n                    filmsArr.push(el.data)\r\n                ))\r\n                setLoading(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n\r\n        setFilm(filmsArr)\r\n           \r\n    }, [props.films])\r\n\r\n    return (\r\n        <Col xxl={4} xl={4} lg={4} md={6} sm={6} xs={12} className=\"mt-2\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>{props.name}</Card.Title>\r\n                        <Card.Subtitle>Gender: {props.gender}</Card.Subtitle>\r\n                        <Card.Subtitle>Height: {props.height}</Card.Subtitle>\r\n                        <Card.Subtitle>Mass: {props.mass}</Card.Subtitle>\r\n                        <Card.Subtitle>Skin Color: {props.skin}</Card.Subtitle>\r\n                        <Card.Subtitle>Hair Color: {props.hair}</Card.Subtitle>\r\n                        <Card.Subtitle>Eyes Color: {props.eyes}</Card.Subtitle>\r\n                        <Card.Subtitle>Birthday: {props.birthday}</Card.Subtitle>\r\n                        <Card.Subtitle>\r\n                            Films: \r\n                            {\r\n                                loading ? (\r\n                                    <div className=\"justify-content-md-center\">\r\n                                        Loading...\r\n                                    </div>\r\n                                ): (\r\n                                    <ul>\r\n                                    {\r\n                                        Object.values(film).map(elements => (\r\n                                            <li>\r\n                                                {elements.title}: {elements.opening_crawl}\r\n                                            </li>\r\n                                        ))\r\n                                    }   \r\n                                    </ul>\r\n                                )\r\n                                \r\n                            }\r\n                        </Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Character\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, Col, Row, Spinner } from 'react-bootstrap'\r\nimport Pagination from '../Components/Pagination'\r\nimport Character from './Character'\r\n\r\nconst ListCharacters = () => {\r\n    \r\n    const [characters, setCharacters] = useState([])\r\n    const [page, setPage] = useState('')\r\n    const [count, setCount] = useState('')\r\n    const [charactersPerPage] = useState(10)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        fetch(`https://swapi.dev/api/people/?page=${page}&format=json`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setCount(data.count)\r\n                    setCharacters(data.results)\r\n                    setIsLoading(false)\r\n                })\r\n    }, [page])\r\n\r\n    const paginate = (pageNumber) => setPage(pageNumber)\r\n\r\n    return (\r\n        <Container fluid className=\"mt-2\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xxl={2} xl={4} lg={4} md={6} sm={6} xs={12} className=\"mt-2\">\r\n                    <Pagination charactersPerPage={charactersPerPage} totalCharacters={count} paginate={paginate} />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                {\r\n                    isLoading ? (\r\n                        <Spinner animation=\"border\" variant=\"secondary\" />\r\n                    ): (\r\n                        Object.values(characters).map((character, index) => (\r\n                            <Character \r\n                                key={index}\r\n                                birthday={character.birth_year}\r\n                                eyes={character.eye_color}\r\n                                films={character.films}\r\n                                gender={character.gender}\r\n                                hair={character.hair_color}\r\n                                height={character.height}\r\n                                homeworld={character.homeworld}\r\n                                mass={character.mass}\r\n                                name={character.name} \r\n                                skin={character.skin_color}\r\n                                species={character.species}\r\n                                starships={character.starships}\r\n                                vehicles={character.vehicles}\r\n                            />\r\n                        ))\r\n                    )\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListCharacters\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    background-color: gray;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nconst Center = styled.div`\r\n    flex: 3;   \r\n    text-align: center; \r\n`\r\nconst Logo = styled.h1`\r\n    font-weight: bold;\r\n`\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Center>\r\n                    <Logo>STAR WARS API.</Logo>\r\n                </Center>\r\n            </Wrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\nimport Header from \"./Components/Header\"\nimport ListCharacters from \"./Pages/ListCharacters\"\nimport Navbar from \"./Components/Navbar\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => {\n\n  return (\n    <>\n      <Header/>\n      <Navbar />\n      <ListCharacters />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}